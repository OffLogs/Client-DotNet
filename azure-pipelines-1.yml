# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- dev

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  ArtifactNugetName: 'packages-nuget'
  BUILD_BUILDNUMBER: '1.0.0.1'

stages:
  - stage: build
    displayName: 'Build Nuget Package'
    jobs:
    - job: CI_Build
      displayName: 'Nuget - Build, Pack and Test'
      steps:
        - task: NuGetToolInstaller@1
        
        - task: NuGetCommand@2
          inputs:
            restoreSolution: '$(solution)'

        - script: |
            echo "{}" > Offlogs.Client.Tests/appsettings.Local.json
            echo "{}" > Offlogs.Client.TestApp.AspNetCore3/appsettings.Local.json
          displayName: 'Create empty config file'
        
        - task: VSBuild@1
          inputs:
            solution: '$(solution)'
            msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
            platform: '$(buildPlatform)'
            configuration: '$(buildConfiguration)'
        
        - task: VSTest@2
          inputs:
            platform: '$(buildPlatform)'
            configuration: '$(buildConfiguration)'
        
        - task: DotNetCoreCLI@2
          displayName: 'Create nuget packages'
          inputs:
            command: 'pack'
            packagesToPack: 'Nuget/**/*.csproj;!**/*.Tests.csproj;!**/*.AspNetCore3.csproj'
            packDirectory: '$(Build.ArtifactStagingDirectory)/packages/nuget'
            nobuild: true
            versioningScheme: 'byBuildNumber'
      
        - publish: '$(Build.ArtifactStagingDirectory)/packages/nuget'
          displayName: 'Publish Artifact: $(ArtifactNugetName)'
          artifact: 'packages-nuget'
          condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))